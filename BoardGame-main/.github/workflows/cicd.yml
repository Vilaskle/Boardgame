name: CI/CD Pipeline - BoardGame

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  deployments: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy BoardGame to EC2 using Docker
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_PROJECT_DIR: ${{ secrets.EC2_PROJECT_DIR }}
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 600 key.pem

          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << EOF
            set -e
            echo "Deploying BoardGame Project..."

            # Clone if needed
            if [ ! -d "$EC2_PROJECT_DIR/.git" ]; then
              echo "Cloning repository..."
              rm -rf "$EC2_PROJECT_DIR"
              git clone https://github.com/SHIVANGOUDAPATIL1234/e-comarce.git "$EC2_PROJECT_DIR"
            fi

            cd "$EC2_PROJECT_DIR"

            echo "Pulling latest code..."
            git reset --hard
            git clean -fd
            git pull origin main

            echo "Building JAR using Maven..."
            ./mvnw clean package -DskipTests

            echo "Building Docker image..."
            docker build -t boardgame-app .

            echo "Stopping old container (if running)..."
            docker stop boardgame || true
            docker rm boardgame || true

            echo "Running new container..."
            docker run -d --name boardgame -p 8080:8080 boardgame-app

            echo "Deployment complete."
          EOF

      - name: Cleanup SSH key
        run: rm -f key.pem

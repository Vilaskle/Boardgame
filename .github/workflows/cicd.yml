name: Build, Test, Dockerize and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      SSH_KEY_PATH: $HOME/.ssh/id_rsa
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_PORT: ${{ secrets.EC2_SSH_PORT }}

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Setup Java
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    # Maven Build
    - name: Make mvnw executable and build
      run: |
        chmod +x BoardGame-main/mvnw
        cd BoardGame-main
        ./mvnw clean install -DskipTests

    # Build Docker image
    - name: Build Docker image
      run: |
        cd BoardGame-main
        docker build -t boardgame-app .

    - name: Save Docker image to TAR
      run: docker save boardgame-app -o boardgame-app.tar

    # Move docker-compose to root
    - name: Copy docker-compose.yml to root
      run: cp BoardGame-main/docker-compose.yml .

    # Confirm files exist
    - name: List files before SCP
      run: |
        echo "Current directory: $(pwd)"
        ls -l
        test -f boardgame-app.tar && echo "Docker TAR exists ✅"
        test -f docker-compose.yml && echo "docker-compose.yml exists ✅"

    # Setup SSH key
    - name: Setup SSH key
      run: |
        mkdir -p $HOME/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > $SSH_KEY_PATH
        chmod 600 $SSH_KEY_PATH

    # Test SSH connection
    - name: Test SSH connectivity
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        port: ${{ env.EC2_PORT }}
        key_path: ${{ env.SSH_KEY_PATH }}
        script: |
          echo "✅ SSH connection successful"
          whoami
          pwd

    # Copy artifacts to EC2
    - name: Copy files to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        port: ${{ env.EC2_PORT }}
        key_path: ${{ env.SSH_KEY_PATH }}
        source: |
          boardgame-app.tar
          docker-compose.yml
        target: /home/${{ env.EC2_USER }}/app

    # Deploy on EC2
    - name: SSH into EC2 and Deploy
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        port: ${{ env.EC2_PORT }}
        key_path: ${{ env.SSH_KEY_PATH }}
        script: |
          mkdir -p /home/${{ env.EC2_USER }}/app
          cd /home/${{ env.EC2_USER }}/app
          docker image prune -f
          docker load < boardgame-app.tar
          docker compose down || true
          docker compose up -d

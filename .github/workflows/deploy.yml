# name: Build, Test, Dockerize and Deploy to EC2

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         distribution: temurin
#         java-version: 17

#     - name: Make mvnw executable
#       working-directory: BoardGame-main
#       run: chmod +x ./mvnw

#     - name: Build with Maven
#       working-directory: BoardGame-main
#       run: ./mvnw clean install -DskipTests

#     - name: Build Docker image
#       working-directory: BoardGame-main
#       run: docker build -t boardgame-app .

#     - name: Save Docker image to TAR
#       working-directory: BoardGame-main
#       run: docker save boardgame-app > boardgame-app.tar

#     - name: Copy files to EC2
#       uses: appleboy/scp-action@v0.1.7
#       with:
#         host: ${{ secrets.EC2_HOST }}
#         username: ${{ secrets.EC2_USER }}
#         port: ${{ secrets.EC2_SSH_PORT }}
#         key: ${{ secrets.EC2_SSH_KEY }}
#         source: |
#           BoardGame-main/boardgame-app.tar
#           BoardGame-main/docker-compose.yml
#         target: /home/${{ secrets.EC2_USER }}/app

#     - name: SSH into EC2 and Deploy
#       uses: appleboy/ssh-action@v0.1.10
#       with:
#         host: ${{ secrets.EC2_HOST }}
#         username: ${{ secrets.EC2_USER }}
#         port: ${{ secrets.EC2_SSH_PORT }}
#         key: ${{ secrets.EC2_SSH_KEY }}
#         script: |
#           cd /home/${{ secrets.EC2_USER }}/app
#           docker load < boardgame-app.tar
#           docker compose down || true
#           docker compose up -d



name: Build, Test, Dockerize and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    - name: Make mvnw executable
      run: |
        cd BoardGame-main
        chmod +x mvnw

    - name: Build with Maven
      run: |
        cd BoardGame-main
        ./mvnw clean install -DskipTests

    - name: Build Docker image
      run: |
        cd BoardGame-main
        docker build -t boardgame-app .

    - name: Save Docker image to TAR
      run: docker save boardgame-app -o boardgame-app.tar

    - name: Copy docker-compose.yml to root
      run: cp BoardGame-main/docker-compose.yml .

    - name: List files before SCP (debug)
      run: |
        echo "Current directory: $(pwd)"
        ls -l
        test -f boardgame-app.tar && echo "Docker TAR exists ✅"
        test -f docker-compose.yml && echo "docker-compose.yml exists ✅"

    - name: Test SSH connection
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        port: ${{ secrets.EC2_SSH_PORT }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "SSH connection test successful"
          whoami
          pwd

    - name: Copy files to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        port: ${{ secrets.EC2_SSH_PORT }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: |
          boardgame-app.tar
          docker-compose.yml
        target: /home/ubuntu/app

    - name: SSH into EC2 and Deploy
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        port: ${{ secrets.EC2_SSH_PORT }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ubuntu/app
          docker load < boardgame-app.tar
          docker compose down || true
          docker compose up -d

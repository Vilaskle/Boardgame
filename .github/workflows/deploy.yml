name: Build, Test, Dockerize and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    - name: Make mvnw executable
      run: chmod +x ./mvnw

    - name: Build with Maven
      run: ./mvnw clean install -DskipTests

    - name: Build Docker image
      run: docker build -t boardgame-app .

    - name: Save Docker image to TAR
      run: docker save boardgame-app -o boardgame-app.tar

    - name: List files before SCP (debug)
      run: |
        echo "Current directory: $(pwd)"
        ls -l
        test -f boardgame-app.tar && echo "âœ… Docker TAR file exists"
        test -f docker-compose.yml && echo "âœ… docker-compose.yml exists"

    - name: Test SSH connection to EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        port: ${{ secrets.EC2_SSH_PORT }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "âœ… SSH connection test successful"
          whoami
          pwd

    - name: Copy files to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        port: ${{ secrets.EC2_SSH_PORT }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: |
          boardgame-app.tar
          docker-compose.yml
        target: /home/${{ secrets.EC2_USER }}/app

    - name: SSH into EC2 and Deploy
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        port: ${{ secrets.EC2_SSH_PORT }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          set -e
          cd /home/${{ secrets.EC2_USER }}/app

          echo "ðŸ“¦ Loading Docker image..."
          docker load < boardgame-app.tar

          echo "ðŸ§¹ Stopping existing containers..."
          docker compose down || true

          echo "ðŸš€ Starting application..."
          docker compose up -d --build

          echo "âœ… Deployment complete."
